name: Blackbox-Auth

on:
  push:
    branches: [ "main" ]
    paths:
      - src/BlackBox.Auth/*
  pull_request:
    branches: [ "main" ]
    paths:
      - src/BlackBox.Auth/*
      
  workflow_dispatch:
env:
  LOCATION: "Southeast Asia"
  ENABLE_EXTERNAL: true
  AZURE_CONTAINER_APP_NAME: blackbox-auth
  AZURE_CONTAINER_IMAGE: blackbox.auth
  
jobs:
  Local-Build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore src/BlackBox.Auth/BlackBox.Auth.csproj
    - name: Build
      run: dotnet build src/BlackBox.Auth/BlackBox.Auth.csproj -c Release
    - name: Publish
      run: dotnet publish src/BlackBox.Auth/BlackBox.Auth.csproj

  Build-Image-And-Push-Registry:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v2
      with:
        login-server: ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
        password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

    - name: Build and push container image to ACR
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ secrets.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ env.AZURE_CONTAINER_IMAGE }}:latest
        file: src/BlackBox.Auth/Dockerfile
        context: .
  
  Deploy-Container-Apps:
    needs : 
      - Build-Image-And-Push-Registry
      - Local-Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: "infastructure/terraform"
    steps:
      - uses: actions/checkout@v4
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8
          
      - name: Terraform init
        run: terraform init
  
      - name: Setup Env Variables For Terraform
        run: |
          echo "TF_VAR_subscription_id=${{secrets.AZURE_SUBSCRIPTION_ID}}" >> $GITHUB_ENV
          echo "TF_VAR_location=${{env.LOCATION}}" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=${{secrets.AZURE_RESOURCE_GROUP_NAME}}" >> $GITHUB_ENV
          echo "TF_VAR_acr_name=${{secrets.AZURE_CONTAINER_REGISTRY_NAME}}" >> $GITHUB_ENV
          echo "TF_VAR_container_app_env_name=${{secrets.AZURE_CONTAINER_APP_ENV_NAME}}" >> $GITHUB_ENV
          echo "TF_VAR_container_app_name=${{env.AZURE_CONTAINER_APP_NAME}}" >> $GITHUB_ENV
          echo "TF_VAR_container_image=${{env.AZURE_CONTAINER_IMAGE}}" >> $GITHUB_ENV
          echo "TF_VAR_dapr_app_id=${{env.DAPR_APP_ID}}" >> $GITHUB_ENV
          echo "TF_VAR_container_log_analytics_workspace=${{secrets.AZURE_LOG_ANALYTICS_WORKSPACE}}" >> $GITHUB_ENV
          echo "TF_VAR_container_app_external_enabled=${{env.ENABLE_EXTERNAL}}" >> $GITHUB_ENV
      
      - name: Terraform Fetch state
        run: |
          terraform import azurerm_container_app.example /subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/${{secrets.AZURE_RESOURCE_GROUP_NAME}}/providers/Microsoft.App/containerApps/${{env.AZURE_CONTAINER_APP_NAME}}
          terraform import azurerm_resource_group.example /subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/${{secrets.AZURE_RESOURCE_GROUP_NAME}}
          terraform import azurerm_log_analytics_workspace.example /subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/${{secrets.AZURE_RESOURCE_GROUP_NAME}}/providers/Microsoft.OperationalInsights/workspaces/${{secrets.AZURE_LOG_ANALYTICS_WORKSPACE}}
          terraform import azurerm_container_registry.example /subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/${{secrets.AZURE_RESOURCE_GROUP_NAME}}/providers/Microsoft.ContainerRegistry/registries/${{secrets.AZURE_CONTAINER_REGISTRY_NAME}}
          terraform import azurerm_container_app_environment.example /subscriptions/${{secrets.AZURE_SUBSCRIPTION_ID}}/resourceGroups/${{secrets.AZURE_RESOURCE_GROUP_NAME}}/providers/Microsoft.App/managedEnvironments/${{secrets.AZURE_CONTAINER_APP_ENV_NAME}}
        
      - name: Terraform apply deploy
        run: terraform apply -auto-approve
